# Generated by Django 5.0.6 on 2025-01-28 21:12

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('classroom_id', models.AutoField(primary_key=True, serialize=False)),
                ('classroom_name', models.CharField(max_length=100)),
                ('capacity', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CoRequisite',
            fields=[
                ('corequisite_id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('department_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('major_id', models.AutoField(primary_key=True, serialize=False)),
                ('major_name', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='UserLevel',
            fields=[
                ('user_level_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_level_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('student_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(message='Student ID must be a 9-digit number.', regex='^\\d{9}$')], verbose_name='Student ID')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('user_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appCourseWare.userlevel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=200)),
                ('course_code', models.CharField(max_length=50, unique=True)),
                ('exam_time', models.DateTimeField()),
                ('class_date', models.CharField(default='Sat', help_text='یکی یا دو روز از شنبه تا چهارشنبه را انتخاب کنید. (مثال: Sat,Mon)', max_length=23, verbose_name='روزهای برگزاری کلاس')),
                ('class_time', models.CharField(choices=[('8:00-10:00', '8:00-10:00'), ('10:00-12:00', '10:00-12:00'), ('14:00-16:00', '14:00-16:00'), ('16:00-18:00', '16:00-18:00')], max_length=11, verbose_name='زمان برگزاری کلاس')),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='appCourseWare.classroom')),
                ('corequisites', models.ManyToManyField(related_name='corequired_for', through='appCourseWare.CoRequisite', to='appCourseWare.course')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appCourseWare.department')),
            ],
        ),
        migrations.AddField(
            model_name='corequisite',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='corequisites_set', to='appCourseWare.course'),
        ),
        migrations.AddField(
            model_name='corequisite',
            name='required_course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_corequisites', to='appCourseWare.course'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appCourseWare.department'),
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('instructor_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructors', to='appCourseWare.department')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='instructor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='appCourseWare.instructor'),
        ),
        migrations.CreateModel(
            name='Prerequisite',
            fields=[
                ('prerequisite_id', models.AutoField(primary_key=True, serialize=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prerequisites_set', to='appCourseWare.course')),
                ('required_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_prerequisites', to='appCourseWare.course')),
            ],
            options={
                'unique_together': {('course', 'required_course')},
            },
        ),
        migrations.AddField(
            model_name='course',
            name='prerequisites',
            field=models.ManyToManyField(related_name='required_for', through='appCourseWare.Prerequisite', to='appCourseWare.course'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('national_id', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='کد ملی باید دقیقا ۱۰ رقم باشد.', regex='^\\d{10}$')])),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(message='شماره تلفن باید به فرم +98XXXXXXXXXX باشد.', regex='^\\+98\\d{10}$')])),
                ('gpa', models.DecimalField(decimal_places=2, default=16.0, max_digits=4, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(20.0)])),
                ('max_units', models.PositiveIntegerField(default=0, editable=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('admission_year', models.PositiveIntegerField()),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appCourseWare.major')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='corequisite',
            unique_together={('course', 'required_course')},
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('enrollment_id', models.AutoField(primary_key=True, serialize=False)),
                ('enrollment_date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(choices=[('enrolled', 'در حال گذراندن'), ('dropped', 'افتاده'), ('withdrawed', 'حذف اضطراری'), ('completed', 'گذرانده')], max_length=20)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appCourseWare.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appCourseWare.student')),
            ],
            options={
                'unique_together': {('student', 'course')},
            },
        ),
    ]
